name: Build and Push AMP Docker Images

on:
  schedule:
    - cron: '0 0 * * 0' # Runs every week
  push:
    paths:
      - 'AMPDockerfile*'
      - '*ampstart.sh'
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Detect changed files and map dependencies
        id: detect-changes
        run: |
          echo "Checking for changed files..."
          
          # Fetch full history to ensure we have all commits
          git fetch --unshallow || git fetch --all

          # Fallback to the default branch if 'before' is not available
          if [ -z "${{ github.event.before }}" ] || [ "${{ github.event.before }}" = "0000000000000000000000000000000000000000" ]; then
            echo "No previous commit detected. Comparing against default branch."
            git fetch origin ${{ github.event.repository.default_branch }} --depth=1
            CHANGED_FILES=$(git diff --name-only origin/${{ github.event.repository.default_branch }})
          else
            echo "Comparing against previous commit: ${{ github.event.before }}"
            CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          fi
          
          # Initialize IMAGES_TO_BUILD
          IMAGES_TO_BUILD=""

          # Add all images except uptimekuma2 if ampstart.sh is changed
          if echo "$CHANGED_FILES" | grep -q -w "ampstart.sh"; then
            IMAGES_TO_BUILD="arm arm-java arm-python3 arm-cpx arm-cpx-wine9 ubuntu"
          fi

          # Add dependencies for AMPDockerFileARM
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileARM"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD arm arm-java arm-python3 arm-cpx arm-cpx-wine9"
          fi

          # Add image for AMPDockerFileARMJava
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileARMJava"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD arm-java"
          fi

          # Add image for AMPDockerFileARMPython3
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileARMPython3"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD arm-python3"
          fi

          # Add image for AMPDockerfileARMCPx
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileARMCPx"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD arm-cpx arm-cpx-wine9"
          fi

          # Add image for AMPDockerfileARMCPxWine9
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileARMCPxWine9"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD arm-cpx-wine9"
          fi

          # Add image for AMPDockerfileUbuntu
          if echo "$CHANGED_FILES" | grep -q "AMPDockerfileUbuntu"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD ubuntu"
          fi

          # Add image for AMPDockerfileUptimeKuma2
          if echo "$CHANGED_FILES" | grep -q -e "AMPDockerfileUptimeKuma2" -e "uk2_ampstart.sh"; then
            IMAGES_TO_BUILD="$IMAGES_TO_BUILD uptimekuma2"
          fi

          # Remove duplicate image entries
          IMAGES_TO_BUILD=$(echo $IMAGES_TO_BUILD | tr ' ' '\n' | sort -u | tr '\n' ' ')

          echo "IMAGES_TO_BUILD=$IMAGES_TO_BUILD" >> $GITHUB_ENV

      - name: Build and push images
        if: env.IMAGES_TO_BUILD != ''
        run: |
          for IMAGE in $IMAGES_TO_BUILD; do
            case $IMAGE in
              arm)
                echo "Building and pushing ARM image..."
                docker buildx build --push --progress=plain --platform=linux/arm64 -f AMPDockerfileARM -t acidv1p3r/amp:arm .
                ;;
              arm-java)
                echo "Building and pushing ARM Java image..."
                docker buildx build --push --progress=plain --platform=linux/arm64 -f AMPDockerfileARMJava -t acidv1p3r/amp:arm-java .
                ;;
              arm-python3)
                echo "Building and pushing ARM Python3 image..."
                docker buildx build --push --progress=plain --platform=linux/arm64 -f AMPDockerfileARMPython3 -t acidv1p3r/amp:arm-python3 .
                ;;
              arm-cpx)
                echo "Building and pushing ARM CPx image..."
                docker buildx build --push --progress=plain --platform=linux/arm64 -f AMPDockerfileARMCPx -t acidv1p3r/amp:arm-cpx .
                ;;
              arm-cpx-wine9)
                echo "Building and pushing ARM CPx Wine9 image..."
                docker buildx build --push --progress=plain --platform=linux/arm64 -f AMPDockerfileARMCPxWine9 -t acidv1p3r/amp:arm-cpx-wine9 .
                ;;
              ubuntu)
                echo "Building and pushing Ubuntu image..."
                docker buildx build --push --progress=plain --platform=linux/amd64 -f AMPDockerfileUbuntu -t acidv1p3r/amp:ubuntu .
                ;;
              uptimekuma2)
                echo "Building and pushing Uptime Kuma 2 image..."
                docker buildx build --push --progress=plain --platform=linux/amd64 -f AMPDockerfileUptimeKuma2 -t acidv1p3r/amp:uptimekuma2 .
                ;;
              *)
                exit 1
                ;;
            esac
          done
